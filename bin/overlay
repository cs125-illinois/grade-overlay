#!/usr/bin/env node

'use strict'

if (require.main !== module) {
  return;
}

const _ = require('underscore'),
      chai = require('chai'),
      path = require('path'),
      yamljs = require('yamljs'),
      overlay = require('../lib/overlay.js');

chai.use(require('chai-fs'));
const expect = chai.expect;

try {
  let argv = require('minimist')(process.argv.slice(2));

  let configFile = path.resolve(argv._[0]);
  expect(configFile).to.be.a.file().and.not.empty;

  let onto = argv._[1];
  expect(onto).to.be.a.directory().and.not.empty;

  let context;
  if (argv.context) {
    context = yamljs.load(argv.context);
  }
  let myOverlay = overlay(configFile)
    .from(argv.from)
    .into(argv.into)
    .context(context)
    .onto(onto);
  myOverlay.then((into) => {
    console.log(into);
  });
} catch (err) {
  console.log(err);
  console.log(`
usage: overlay configuration.yaml [--from=from] onto [--into=into]
       configuration.yaml: overlay configuration file
       from: override the directory to overlay from (default: from configuration.yaml)
       onto: the directory to overlay onto
       into: override where to put the results (default: temporary directory)`);
}

// vim: ts=2:sw=2:et:ft=javascript
